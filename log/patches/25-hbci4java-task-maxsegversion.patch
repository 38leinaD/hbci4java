Index: src/org/kapott/hbci/GV/HBCIJobImpl.java
===================================================================
RCS file: /cvsroot/hibiscus/hbci4java/src/org/kapott/hbci/GV/HBCIJobImpl.java,v
retrieving revision 1.4
diff -u -r1.4 HBCIJobImpl.java
--- src/org/kapott/hbci/GV/HBCIJobImpl.java	23 May 2011 15:48:19 -0000	1.4
+++ src/org/kapott/hbci/GV/HBCIJobImpl.java	6 Jun 2011 10:29:55 -0000
@@ -157,9 +157,11 @@
         StringBuffer key=new StringBuffer();
         
         // alle param-segmente durchlaufen
-        for (Enumeration i=handler.getPassport().getBPD().propertyNames();i.hasMoreElements();) {
+        Properties bpd = handler.getPassport().getBPD();
+        for (Enumeration i=bpd.propertyNames();i.hasMoreElements();) {
+            String path = (String)i.nextElement();
             key.setLength(0);
-            key.append((String)i.nextElement());
+            key.append(path);
             
             if (key.indexOf("Params")==0) {
                 key.delete(0,key.indexOf(".")+1);
@@ -168,7 +170,16 @@
                 if (key.indexOf(jobnameLL+"Par")==0 &&
                     key.toString().endsWith(".SegHead.code")) 
                 {
-                    key.delete(0,jobnameLL.length()+("Par").length());
+                  // willuhn 2011-06-06 Maximal zulaessige Segment-Version ermitteln
+                  // Hintergrund: Es gibt Szenarien, in denen nicht die hoechste verfuegbare
+                  // Versionsnummer verwendet werden kann, weil die Voraussetzungen impliziert,
+                  // die beim User nicht gegeben sind. Mit diesem Parameter kann die maximale
+                  // Version nach oben begrenzt werden. In AbstractPinTanPassport#setBPD() ist
+                  // ein konkretes Beispiel enthalten (Bank macht HITANS5 und damit HHD 1.4, der
+                  // User hat aber nur ein HHD-1.3-tauglichen TAN-Generator)
+                  int maxAllowedVersion = Integer.parseInt(HBCIUtils.getParam("kernel.gv." + bpd.getProperty(path,"default") + ".segversion.max","0"));
+                  
+                  key.delete(0,jobnameLL.length()+("Par").length());
                     
                     // extrahieren der versionsnummer aus dem spez-namen
                     String st=key.substring(0,key.indexOf("."));
@@ -180,6 +191,12 @@
                         HBCIUtils.log("found invalid job version: key="+key+", jobnameLL="+jobnameLL+" (this is a known, but harmless bug)", HBCIUtils.LOG_WARN);
                     }
                     
+                    // willuhn 2011-06-06 Segment-Versionen ueberspringen, die groesser als die max. zulaessige sind
+                    if (maxAllowedVersion > 0 && version > maxAllowedVersion)
+                    {
+                      HBCIUtils.log("skipping segment version " + version + " for task " + jobnameLL + ", larger than allowed version " + maxAllowedVersion, HBCIUtils.LOG_INFO);
+                      continue;
+                    }
                     // merken der größten jemals aufgetretenen versionsnummer
                     if (version!=0) {
                         HBCIUtils.log("task "+jobnameLL+" is supported with segment version "+st,HBCIUtils.LOG_DEBUG2);
Index: src/org/kapott/hbci/passport/AbstractPinTanPassport.java
===================================================================
RCS file: /cvsroot/hibiscus/hbci4java/src/org/kapott/hbci/passport/AbstractPinTanPassport.java,v
retrieving revision 1.5
diff -u -r1.5 AbstractPinTanPassport.java
--- src/org/kapott/hbci/passport/AbstractPinTanPassport.java	23 May 2011 09:45:26 -0000	1.5
+++ src/org/kapott/hbci/passport/AbstractPinTanPassport.java	6 Jun 2011 10:29:55 -0000
@@ -92,6 +92,17 @@
             // bpd (HITANS) extrahieren
 
             twostepMechanisms.clear();
+            
+            // willuhn 2011-06-06 Maximal zulaessige HITANS-Segment-Version ermitteln
+            // Hintergrund: Es gibt User, die nur HHD 1.3-taugliche TAN-Generatoren haben,
+            // deren Banken aber auch HHD 1.4 beherrschen. In dem Fall wuerde die Bank
+            // HITANS/HKTAN/HITAN in Segment-Version 5 machen, was in der Regel dazu fuehren
+            // wird, dass HHD 1.4 zur Anwendung kommt. Das bewirkt, dass ein Flicker-Code
+            // erzeugt wird, der vom TAN-Generator des Users gar nicht lesbar ist, da dieser
+            // kein HHD 1.4 beherrscht. Mit dem folgenden Parameter kann die Maximal-Version
+            // des HITANS-Segments nach oben begrenzt werden, so dass z.Bsp. HITANS5 ausgefiltert
+            // wird.
+            int maxAllowedVersion = Integer.parseInt(HBCIUtils.getParam("kernel.gv.HITANS.segversion.max","0"));
 
             for (Enumeration e=p.propertyNames();e.hasMoreElements();) {
                 String key=(String)e.nextElement();
@@ -105,13 +116,20 @@
                         // mit identischer Sicherheitsfunktion in unterschiedlichen Segment-Versionen auftreten koennen
                         // Wenn welche mehrfach vorhanden sind, nehmen wir nur das aus der neueren Version
                         int segVersion = Integer.parseInt(subkey.substring(11,12));
-                      
+                        
                         subkey=subkey.substring(subkey.indexOf('.')+1);
                         if (subkey.startsWith("ParTAN2Step") &&
                                 subkey.endsWith(".secfunc"))
                         {
+                            // willuhn 2011-06-06 Segment-Versionen ueberspringen, die groesser als die max. zulaessige sind
+                            if (maxAllowedVersion > 0 && segVersion > maxAllowedVersion)
+                            {
+                              HBCIUtils.log("skipping segversion " + segVersion + ", larger than allowed version " + maxAllowedVersion, HBCIUtils.LOG_INFO);
+                              continue;
+                            }
+
                             String secfunc=p.getProperty(key);
-                            
+
                             // willuhn 2011-05-13 Checken, ob wir das Verfahren schon aus einer aktuelleren Segment-Version haben
                             Properties prev = (Properties) twostepMechanisms.get(secfunc);
                             if (prev != null)
