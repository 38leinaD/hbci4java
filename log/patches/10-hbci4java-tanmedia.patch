Index: src/org/kapott/hbci/GV/GVTAN2Step.java
===================================================================
RCS file: /cvsroot/hibiscus/hbci4java/src/org/kapott/hbci/GV/GVTAN2Step.java,v
retrieving revision 1.1
diff -u -r1.1 GVTAN2Step.java
--- src/org/kapott/hbci/GV/GVTAN2Step.java	4 May 2011 22:37:53 -0000	1.1
+++ src/org/kapott/hbci/GV/GVTAN2Step.java	9 May 2011 15:03:26 -0000
@@ -66,8 +66,8 @@
         addConstraint("ChallengeKlassParam7", "ChallengeKlassParams.param_7","", LogFilter.FILTER_IDS);
         addConstraint("ChallengeKlassParam8", "ChallengeKlassParams.param_8","", LogFilter.FILTER_IDS);
         addConstraint("ChallengeKlassParam9", "ChallengeKlassParams.param_9","", LogFilter.FILTER_IDS);
-        
-        // TODO: tanmedia fehlt
+
+        addConstraint("tanmedia", "tanmedia","", LogFilter.FILTER_IDS);
     }
     
     public void setParam(String paramName, String value)
Index: src/org/kapott/hbci/callback/HBCICallback.java
===================================================================
RCS file: /cvsroot/hibiscus/hbci4java/src/org/kapott/hbci/callback/HBCICallback.java,v
retrieving revision 1.1
diff -u -r1.1 HBCICallback.java
--- src/org/kapott/hbci/callback/HBCICallback.java	4 May 2011 22:37:52 -0000	1.1
+++ src/org/kapott/hbci/callback/HBCICallback.java	9 May 2011 15:03:26 -0000
@@ -329,6 +329,13 @@
      * <code>retData</code> zurückzugeben, ansonsten ein beliebiger nicht-leerer String. */
     public final static int NEED_INFOPOINT_ACK=31;
     
+    /** <p>Ursache des Callbacks: bei Verwendung von HBCI-PIN/TAN muss
+     * die Bezeichnung des TAN-Mediums eingegeben werden. Bei smsTAN ist
+     * das z.Bsp. der Alias-Name des Mobiltelefons, wie er bei der Bank
+     * hinterlegt wurde. Dieser Name wird verwendet, damit die SMS mit
+     * der TAN an mehrere Mobiltelefone schicken kann. */
+    public final static int NEED_PT_TANMEDIA=32;
+    
     /** erwarteter Datentyp der Antwort: keiner (keine Antwortdaten erwartet) */
     public final static int TYPE_NONE=0;
     /** erwarteter Datentyp der Antwort: geheimer Text (bei Eingabe nicht anzeigen) */
Index: src/org/kapott/hbci/passport/AbstractPinTanPassport.java
===================================================================
RCS file: /cvsroot/hibiscus/hbci4java/src/org/kapott/hbci/passport/AbstractPinTanPassport.java,v
retrieving revision 1.1
diff -u -r1.1 AbstractPinTanPassport.java
--- src/org/kapott/hbci/passport/AbstractPinTanPassport.java	4 May 2011 22:37:42 -0000	1.1
+++ src/org/kapott/hbci/passport/AbstractPinTanPassport.java	9 May 2011 15:03:26 -0000
@@ -44,6 +44,7 @@
 import org.kapott.hbci.manager.HBCIKey;
 import org.kapott.hbci.manager.HBCIUtils;
 import org.kapott.hbci.manager.HBCIUtilsInternal;
+import org.kapott.hbci.manager.LogFilter;
 import org.kapott.hbci.protocol.SEG;
 import org.kapott.hbci.protocol.factory.SEGFactory;
 import org.kapott.hbci.security.Crypt;
@@ -959,7 +960,7 @@
                                 
                                 // TODO: verwendete spezifikation parametrisieren
                                 int    hktan_version=Integer.parseInt(hktan.getSegVersion());
-                                String spec=hktan_version<3?"hhd12":"hhd13";
+                                String spec="hhd1" + hktan_version;
                                 
                                 String   klass=cinfo.getKlassBySegCode(segcode,spec);
                                 HBCIUtils.log("using challenge klass "+klass, HBCIUtils.LOG_DEBUG2);
@@ -974,7 +975,7 @@
                                         HBCIUtils.log("adding challenge parameter "+path+" = "+value, HBCIUtils.LOG_DEBUG2);
                                         hktan.setParam("ChallengeKlassParam"+(p+1),value);
                                 }
-                                
+
                                 // wenn auch noch der betrag aus dem auftrag in die challenge-parameter
                                 // eingestellt werden soll, machen wir das (sofern ein wert existiert)
                                 if (secmechInfo.getProperty("needchallengevalue","N").equals("J")) {
@@ -1009,6 +1010,9 @@
                                             }
                                         }
                                 }
+
+                                // willuhn 2011-05-09: Bei Bedarf noch das TAN-Medium erfragen
+                                applyTanMedia((GVTAN2Step) hktan);
                             }
                             
                             // hktan-job zur neuen msg hinzufügen
@@ -1036,6 +1040,9 @@
                             // hktan1.setParam("listidx","");
                             // TODO: das für mehrfachsignaturen
                             // hktan1.setParam("notlasttan","N");
+
+                            // willuhn 2011-05-09: Bei Bedarf noch das TAN-Medium erfragen
+                            applyTanMedia(hktan1);
                             
                             // den hktan-job zusätzlich zur aktuellen msg hinzufügen
                             new_msg_tasks.add(hktan1);
@@ -1053,6 +1060,8 @@
                             // TODO: das für mehrfachsignaturen
                             // hktan2.setParam("notlasttan","J");
                             
+                            // willuhn 2011-05-09: Laut Spec (siehe applyTanMedia()) ist das TAN-Medium nur bei Prozess 1,3 und 4 noetig
+                            
                             // hktan-job zur neuen msg hinzufügen
                             additional_msg_tasks.add(hktan2);
                             
@@ -1093,6 +1102,55 @@
             msgs.addAll(new_msgs);
         }
     }
+    
+    /**
+     * Uebernimmt das Rueckfragen und Einsetzen der TAN-Medien-Bezeichung bei Bedarf.
+     * @param hktan der Job, in den der Parameter eingesetzt werden soll.
+     * @param secmechInfo
+     */
+    private void applyTanMedia(GVTAN2Step hktan)
+    {
+      if (hktan == null)
+        return;
+      
+      // Gibts erst ab hhd1.3, siehe
+      // FinTS_3.0_Security_Sicherheitsverfahren_PINTAN_Rel_20101027_final_version.pdf, Kapitel B.4.3.1.1.1
+      // Zitat: Ist in der BPD als Anzahl unterstützter aktiver TAN-Medien ein Wert > 1
+      //        angegeben und ist der BPD-Wert für Bezeichnung des TAN-Mediums erforderlich = 2,
+      //        so muss der Kunde z. B. im Falle des mobileTAN-Verfahrens
+      //        hier die Bezeichnung seines für diesen Auftrag zu verwendenden TAN-
+      //        Mediums angeben.
+      // Ausserdem: "Nur bei TAN-Prozess=1, 3, 4". Das muess aber der Aufrufer pruefen. Ist mir
+      // hier zu kompliziert
+      
+      int hktan_version = Integer.parseInt(hktan.getSegVersion());
+      HBCIUtils.log("hktan_version: " + hktan_version,HBCIUtils.LOG_DEBUG);
+      if (hktan_version >= 3)
+      {
+        Properties  secmechInfo = getCurrentSecMechInfo();
+        
+        // Anzahl aktiver TAN-Medien ermitteln
+        int num        = Integer.parseInt(secmechInfo.getProperty("nofactivetanmedia","0"));
+        String needed  = secmechInfo.getProperty("needtanmedia","");
+        HBCIUtils.log("nofactivetanmedia: " + num + ", needtanmedia: " + needed,HBCIUtils.LOG_DEBUG);
+
+        // Ich hab Mails von Usern erhalten, bei denen die Angabe des TAN-Mediums auch
+        // dann noetig war, wenn nur eine Handy-Nummer hinterlegt war. Daher logen wir
+        // "num" nur, bringen die Abfrage jedoch schon bei num<2 - insofern needed=2.
+        if (needed.equals("2"))
+        {
+          HBCIUtils.log("we have to add the tan media",HBCIUtils.LOG_DEBUG);
+
+          StringBuffer retData=new StringBuffer();
+          HBCIUtilsInternal.getCallback().callback(this,HBCICallback.NEED_PT_TANMEDIA,
+              "*** Enter the name of your TAN media",
+              HBCICallback.TYPE_TEXT,
+              retData);
+          
+          hktan.setParam("tanmedia",retData.toString());
+        }
+      }
+    }
 
     public void afterCustomDialogInitHook(HBCIDialog dialog)
     {
